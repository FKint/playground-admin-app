version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: jokkebrok/playground-php-app
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build-docker-images:
    executor: docker-publisher
    steps:
      - setup_remote_docker:
          version: 18.09.3
      - checkout
      - run:
          name: Prepare Circle CI cache
          command: |
            echo "$CIRCLE_BRANCH" > .circle-branch
            echo "$CIRCLE_SHA1" > .circle-sha1
      - restore_cache:
          keys:
            - docker-images-v1-{{ checksum ".circle-branch" }}
            - docker-images-v1
      - run:
          name: Load cached images
          command: |
            if [[ -f /tmp/docker-images.tar ]]; then
              docker load -i /tmp/docker-images.tar
            fi
      - run:
          name: Build app
          command: docker build -f docker/Dockerfile --target app -t $IMAGE_NAME:app-$CIRCLE_BRANCH-$CIRCLE_SHA1 -t $IMAGE_NAME:app-latest .
      - run:
          name: Build nginx
          command: docker build -f docker/Dockerfile --target nginx-prod -t $IMAGE_NAME:nginx-$CIRCLE_BRANCH-$CIRCLE_SHA1 -t $IMAGE_NAME:nginx-latest .
      - run:
          name: Archive Docker images
          command: docker save -o /tmp/docker-images.tar $IMAGE_NAME:app-$CIRCLE_BRANCH-$CIRCLE_SHA1 $IMAGE_NAME:app-latest $IMAGE_NAME:nginx-$CIRCLE_BRANCH-$CIRCLE_SHA1 $IMAGE_NAME:nginx-latest
      - save_cache:
          key: docker-images-v1-{{ checksum ".circle-branch" }}-{{ checksum ".circle-sha1" }}
          paths:
            - /tmp/docker-images.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - docker-images.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Load archived Docker images
          command: docker load -i /tmp/workspace/docker-images.tar
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
      - run:
          name: Publish Docker images to Docker Hub
          command: docker push $IMAGE_NAME
  test:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Load archived Docker images
          command: docker load -i /tmp/workspace/docker-images.tar
      - run:
          name: "Run PHP Unit tests"
          command: docker run -v jokkebrok/playground-admin-app:app-test vendor/bin/phpunit
  test-old:
    docker:
      - image: circleci/php:7.2-node-browsers
    working_directory: ~/laravel
    steps:
      - checkout
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev libpng-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "app/composer.lock" }}
            - composer-v1-
      - run:
          command: cp .laravel.env.dusk.example ./app/.env
      - run:
          command: composer install -n --prefer-dist --ignore-platform-reqs
          working_directory: ./app
      - save_cache:
          key: composer-v1-{{ checksum "app/composer.lock" }}
          paths:
            - app/vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "app/package.json" }}
            - node-v1-
      - run:
          command: yarn install
          working_directory: ./app
      - save_cache:
          key: node-v1-{{ checksum "app/package.json" }}
          paths:
            - app/node_modules
      - run: touch app/storage/testing.sqlite
#      - run:
#          command: php artisan migrate:fresh --env=testing --database=sqlite_testing --force
#          working_directory: ./app
      - run:
          command: ./vendor/phpunit/phpunit/phpunit
          working_directory: ./app
      - run:
          command: yarn run production
          working_directory: ./app
      - run:
          name: Start Chrome Driver
          command: ./vendor/laravel/dusk/bin/chromedriver-linux
          background: true
          working_directory: ./app
      - run:
          name: Run Laravel Server
          command: php artisan serve
          background: true
          working_directory: ./app
      - run:
          name: Run Laravel Dusk Tests
          command: php artisan dusk
          working_directory: ./app

workflows:
  version: 2
  build-master:
    jobs:
      - build-docker-images
      - test:
          requires:
            - build-docker-images
      - publish-latest:
          requires:
            - build-docker-images
            - test
          filters:
            branches:
              only: 
                - master