version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: jokkebrok/playground-php-app
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build-docker-images:
    executor: docker-publisher
    steps:
      - setup_remote_docker:
          version: 18.09.3
      - checkout
      - run:
          name: Prepare Circle CI cache
          command: |
            echo "$CIRCLE_BRANCH" > .circle-branch
            echo "$CIRCLE_SHA1" > .circle-sha1
      - restore_cache:
          keys:
            - docker-images-v1-{{ checksum ".circle-branch" }}
            - docker-images-v1
      - run:
          name: Load cached images
          command: |
            if [[ -f /tmp/docker-images.tar ]]; then
              docker load -i /tmp/docker-images.tar
            fi
      - run:
          name: Build app
          command: docker build -f docker/Dockerfile --target app -t $IMAGE_NAME:app-$CIRCLE_BRANCH-$CIRCLE_SHA1 -t $IMAGE_NAME:app-latest .
      - run:
          name: Build nginx
          command: docker build -f docker/Dockerfile --target nginx-prod -t $IMAGE_NAME:nginx-$CIRCLE_BRANCH-$CIRCLE_SHA1 -t $IMAGE_NAME:nginx-latest .
      - run:
          name: Build app for testing
          command: docker build -f docker/Dockerfile --target app-test -t $IMAGE_NAME:app-test .
      - run:
          name: Archive Docker images
          command: docker save -o /tmp/docker-images.tar $IMAGE_NAME:app-$CIRCLE_BRANCH-$CIRCLE_SHA1 $IMAGE_NAME:app-latest $IMAGE_NAME:nginx-$CIRCLE_BRANCH-$CIRCLE_SHA1 $IMAGE_NAME:nginx-latest $IMAGE_NAME:app-test
      - save_cache:
          key: docker-images-v1-{{ checksum ".circle-branch" }}-{{ checksum ".circle-sha1" }}
          paths:
            - /tmp/docker-images.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - docker-images.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Load archived Docker images
          command: docker load -i /tmp/workspace/docker-images.tar
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
      - run:
          name: Publish Docker images to Docker Hub
          command: docker push $IMAGE_NAME
  test:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Load archived Docker images
          command: docker load -i /tmp/workspace/docker-images.tar
      - run:
          name: Run PHP Unit tests
          command: docker run --name app-test $IMAGE_NAME:app-test vendor/bin/phpunit
  test-dusk:
    executor: docker-publisher
    steps:
      - attach_workspace:
        at: /tmp/workspace
      - setup_remote_docker:
        version: 18.09.3
      - run:
          name: Load archived Docker images
          command: docker load -i /tmp/workspace/docker-images.tar
      - run:
          name: Run Laravel Dusk tests
          command: |
            docker network create tmp-dusk-network
            docker run -d --name app-container --network tmp-dusk-network $IMAGE_NAME:app-test php artisan serve
            docker run -d --name selenium --network tmp-dusk-network --shm-size=2g selenium/standalone-chrome:3
            docker exec app-container php artisan dusk
workflows:
  version: 2
  build-master:
    jobs:
      - build-docker-images
      - test:
          requires:
            - build-docker-images
      - test-dusk:
          requires:
            - build-docker-images
            - test
      - publish-latest:
          requires:
            - build-docker-images
            - test
            - test-dusk
          filters:
            branches:
              only: 
                - master